openapi: 3.0.1
info:
  title: GoNewsletter
  version: 1.0.0
servers:
  - url: http://localhost:8080

paths:
  /:
    get:
      description: Ping BE
      responses:
        '204':
          description: No Content
  /auth/register:
    post:
      description: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/LoginCredentials'
      responses:
        '201':
          description: Created
        '400':
          description: Bad request
        '500':
          description: Internal server error
  /auth/login:
    post:
      description: Log in a user
      requestBody:
        required: true
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/LoginCredentials'
      responses:
        '200':
          description: Jwt token for furter auth
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/JwtToken'
        '400':
          description: Bad request
        '401':
          description: Invalid credentials
        '500':
          description: Internal server error
  /password/request-reset:
    post:
      description: Request to get reset password link, link is valid 15 minutes
      requestBody:
        required: true
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/RequestResetPasswordLink'
      responses:
        '204':
          description: No Content. This will be return even if email is not found.
        '400':
          description: Bad request
        '500':
          description: Internal server error
  /password/reset/{token}:
    post:
      description: Sets new password with reset token
      parameters:
        - in: path
          name: token
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/ResetPasswordAttempt'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad request
        '404':
          description: Token not found
        '500':
          description: Internal server error
  /newsletters:
    post:
      security:
        - bearerAuth: [] 
      description: Create a newsletter. Created newsletter will belong to signed user. 
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNewsletter'
      responses:
        '201':
          description: Created
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
    get:
      description: Get all newsletters.
      responses:
        '200':
          description: All existing newsletters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewsletterList'
        '500':
          description: Internal server error
  /newsletters/{id}:
    get:
      description: Get newsletter by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Get newsletters by given id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Newsletter'
        '400':
          description: Bad request        
        '404':
          description: Not found
        '500':
          description: Internal server error
    put:
      security:
        - bearerAuth: [] 
      description: Update newsletter by ID. Can be proformed only with signed in users newsletters.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNewsletter'
      responses:
        '200':
          description: Edited newsletters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Newsletter'
        '400':
          description: Bad request
        '401':
          description: Unauthorized        
        '404':
          description: Not found
        '500':
          description: Internal server error
    delete:
      security:
        - bearerAuth: [] 
      description: Delete newsletter by ID. Can be proformed only with signed in users newsletters.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
        '400':
          description: Bad request
        '401':
          description: Unauthorized        
        '404':
          description: Not found
        '500':
          description: Internal server error
  /newsletters/{id}/posts:
    post:
      security:
        - bearerAuth: [] 
      description: Create a post for a newsletter. Can be proformed only with signed in users newsletters.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePost'
      responses:
        '201':
          description: Created
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not found
        '500':
          description: Internal server error
    get:
      description: Get all posts of a newsletter.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of newsletter posts.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostList'
        '400':
          description: Bad request        
        '404':
          description: Not found
        '500':
          description: Internal server error
  /newsletters/{id}/subscribers:
    post:
      description: Request subscription. Sends verification link to given email. Link is valid for 30 minutes.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscribe'
      responses:
        '200':
          description: Verification email send.
        '400':
          description: Bad request        
        '404':
          description: Not found
        '500':
          description: Internal server error
    get:
      security:
        - bearerAuth: [] 
      description: Get all subscribers of a newsletter. Can be proformed only with signed in users newsletters.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of emails subscriber.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscribers'
        '400':
          description: Bad request
        '401':
          description: Unauthorized        
        '404':
          description: Not found
        '500':
          description: Internal server error
  /newsletters/{id}/subscribers/verify/{token}:
    post:
      description: Confirms subscription.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: path
          name: token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Subscribes email has been verified.
        '400':
          description: Bad request        
        '404':
          description: Not found
        '500':
          description: Internal server error
  /newsletters/{newsId}/subscribers/{subId}:
    delete:
      description: Unsubscribes subscriber.
      parameters:
        - in: path
          name: newsId
          required: true
          schema:
            type: string
        - in: path
          name: subId
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content, Subscriber has been unsubscribed.
        '400':
          description: Bad request        
        '404':
          description: Not found
        '500':
          description: Internal server error
  /users:
    get:
      security:
        - bearerAuth: [] 
      description: Get all users
      responses:
        '200':
          description: List of all users
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/UpdateUserList'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /users/{id}:
    get:
      security:
        - bearerAuth: [] 
      description: Get editor by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User with given id
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/User'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not found
        '500':
          description: Internal server error
    put:
      security:
        - bearerAuth: [] 
      description: Update editor by ID this can be preformed only on cuccently logged in user
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUser'
      responses:
        '204':
          description: No content
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not found
        '500':
          description: Internal server error
    delete:
      security:
        - bearerAuth: [] 
      description: Delete editor by ID this can be preformed only on cuccently logged in user
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not found
        '500':
          description: Internal server error
    
components:
  schemas:
    LoginCredentials:
      type: object
      required:
      - email
      - password
      properties:
        email:
          type: string
          description: Email address of the user
        password:
          type: string
          description: User password
    
    JwtToken:
      type: object
      required:
        - token
      properties:
        token:
          type: string
          description: JWT token for authentication
          
    ResetPasswordAttempt:
      type: object
      required:
        - new_password
      properties:
        new_password:
          type: string
          description: New password for the user
          
    RequestResetPasswordLink:
      type: object
      required:
        - email
      properties:
        email:
          type: string
          description: Email address of the user requesting password reset
    User:
      type: object
      required:
        - id
        - email
      properties:
        id:
          type: integer
          format: uint64
          description: ID of the user
        email:
          type: string
          description: Email address of the user
          
    UpdateUser:
      type: object
      required:
        - email
      properties:
        email:
          type: string
          description: Email address of the user
          
    UpdateUserList:
      description: List of users
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/User'
            
    UpdateNewsletter:
      type: object
      required:
        - title
      properties:
        title:
          type: string
          description: Title of the newsletter
        description:
          type: string
          description: Description of the newsletter

    Newsletter:
      type: object
      required:
        - id
        - title
        - creator
        - created_at
      properties:
        id:
          type: integer
          format: uint64
          description: ID of the newsletter
        title:
          type: string
          description: Title of the newsletter
        description:
          type: string
          description: Description of the newsletter
        posts:
          type: array
          items:
            $ref: '#/components/schemas/Post'
          description: List of posts in the newsletter
        created_at:
          type: string
          format: date-time
          description: Date and time when the newsletter was created
        creator:
          type: integer
          format: uint64
          description: ID of the creator of the newsletter

    NewsletterList:
      description: List of newsletters
      type: object
      properties:
        newsletters:
          type: array
          items:
            $ref: '#/components/schemas/Newsletter'

    UpdatePost:
      type: object
      required:
        - title
        - body
      properties:
        title:
          type: string
          description: Title of the post
        body:
          type: string
          description: Body content of the post
    
    Post:
      type: object
      required:
        - id
        - title
        - body
        - created_at
        - newsletter_id
      properties:
        id:
          type: integer
          format: uint64
          description: ID of the post
        title:
          type: string
          description: Title of the post
        body:
          type: string
          description: Body content of the post
        created_at:
          type: string
          format: date-time
          description: Date and time when the post was created
        newsletter_id:
          type: integer
          format: uint64
          description: ID of the newsletter associated with the post
          
    PostList:
      description: List of users
      type: object
      properties:
        posts:
          type: array
          items:
            $ref: '#/components/schemas/Post'

    Subscribe:
      type: object
      required:
        - email
      properties:
        email:
          type: string
          description: Email of subscriber.
          
    Subscribers:
      description: List of users
      type: object
      properties:
        subscribes:
          type: array
          items:
            type: string
          
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT